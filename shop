#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_NAME_LENGTH 50
#define MAX_HISTORY 10
#define MAX_STOCK 100
#define MAX_CLIENTS 100
#define MAX_STORE_CAPACITY 200 

typedef enum {PETIT, MOYEN, GRAND} Taille;

typedef struct {
    char nom[MAX_NAME_LENGTH];
    int ref;
    int quantite;
    double prix;
    Taille taille;
} Produit;

typedef struct {
    char nom[MAX_NAME_LENGTH];
    char prenom[MAX_NAME_LENGTH];
    int historique[MAX_HISTORY]; 
    int count; 
} Client;

Produit stock[MAX_STOCK];
int nb_produits = 0;

Client clients[MAX_CLIENTS];
int nb_clients = 0;

int store_capacity = MAX_STORE_CAPACITY;

void ajouterProduit(Produit produit) {
    if (nb_produits < MAX_STOCK) {
        int size;
        switch (produit.taille) {
            case PETIT:
                size = 1;
                break;
            case MOYEN:
                size = 2;
                break;
            case GRAND:
                size = 4;
                break;
        }
        if (store_capacity - size >= 0) {
            store_capacity -= size;
            stock[nb_produits++] = produit;
        } else {
            printf("Pas assez de place dans le magasin pour ce produit.\n");
        }
    } else {
        printf("Le stock est plein, impossible d'ajouter le produit.\n");
    }
}

void afficherProduit(int ref) {
    for (int i = 0; i < nb_produits; i++) {
        if (stock[i].ref == ref) {
            printf("Produit %s:\n", stock[i].nom);
            printf("Référence: %d\n", stock[i].ref);
            printf("Quantité en stock: %d\n", stock[i].quantite);
            printf("Prix: %.2f\n", stock[i].prix);
            printf("Taille: ");
            switch (stock[i].taille) {
                case PETIT:
                    printf("Petit\n");
                    break;
                case MOYEN:
                    printf("Moyen\n");
                    break;
                case GRAND:
                    printf("Grand\n");
                    break;
            }
            return;
        }
    }
    printf("Produit non trouvé.\n");
}

void ajouterClient(Client client) {
    if (nb_clients < MAX_CLIENTS) {
        clients[nb_clients++] = client;
    } else {
        printf("Nombre maximum de clients atteint.\n");
    }
}

void afficherClient(char *nom) {
    for (int i = 0; i < nb_clients; i++) {
        if (strcmp(clients[i].nom, nom) == 0) {
            printf("Client %s %s\n", clients[i].prenom, clients[i].nom);
            printf("Historique d'achats:\n");
            for (int j = 0; j < clients[i].count; j++) {
                printf("%d\n", clients[i].historique[j]);
            }
            return;
        }
    }
    printf("Client non trouvé.\n");
}

void acheterProduit(char *nomClient, int refProduit) {
    Client *client = NULL;
    for (int i = 0; i < nb_clients; i++) {
        if (strcmp(clients[i].nom, nomClient) == 0) {
            client = &clients[i];
            break;
        }
    }
    if (client == NULL) {
        printf("Client non trouvé.\n");
        return;
    }

    Produit *produit = NULL;
    for (int i = 0; i < nb_produits; i++) {
        if (stock[i].ref == refProduit) {
            produit = &stock[i];
            break;
        }
    }
    if (produit == NULL) {
        printf("Produit non trouvé.\n");
        return;
    }

    if (produit->quantite <= 0) {
        printf("Le produit est en rupture de stock.\n");
        return;
    }

    if (client->count < MAX_HISTORY) {
        client->historique[client->count++] = produit->ref;
    } else {
        printf("L'historique d'achats du client est plein.\n");
    }

    produit->quantite--;
}

void sauvegarder() {
    FILE *fp = fopen("data.txt", "w");

    // Save products
    fprintf(fp, "%d\n", nb_produits);
    for (int i = 0; i < nb_produits; i++) {
        fprintf(fp, "%s %d %d %.2lf %d\n", stock[i].nom, stock[i].ref, stock[i].quantite, stock[i].prix, stock[i].taille);
    }

    // Save clients
    fprintf(fp, "%d\n", nb_clients);
    for (int i = 0; i < nb_clients; i++) {
        fprintf(fp, "%s %s %d\n", clients[i].prenom, clients[i].nom, clients[i].count);
        for (int j = 0; j < clients[i].count; j++) {
            fprintf(fp, "%d\n", clients[i].historique[j]);
        }
    }

    fclose(fp);
}

void charger() {
    FILE *fp = fopen("data.txt", "r");

    if (fp == NULL) {
        printf("Impossible d'ouvrir le fichier pour la lecture. Aucune donnée chargée.\n");
        return;
    }

    // Load products
    fscanf(fp, "%d", &nb_produits);
    for (int i = 0; i < nb_produits; i++) {
        fscanf(fp, "%s %d %d %lf %d", stock[i].nom, &stock[i].ref, &stock[i].quantite, &stock[i].prix, (int *)&stock[i].taille);
    }

    // Load clients
    fscanf(fp, "%d", &nb_clients);
    for (int i = 0; i < nb_clients; i++) {
        fscanf(fp, "%s %s %d", clients[i].prenom, clients[i].nom, &clients[i].count);
        for (int j = 0; j < clients[i].count; j++) {
            fscanf(fp, "%d", &clients[i].historique[j]);
        }
    }

    fclose(fp);
}

void modeGestion() {
    while (1) {
        printf("1. Ajouter produit\n");
        printf("2. Afficher produit\n");
        printf("3. Ajouter client\n");
        printf("4. Afficher client\n");
        printf("5. Quitter\n");

        int choix;
        scanf("%d", &choix);

        if (choix == 1) {
            Produit produit;
            printf("Entrer le nom, la référence, la quantité, le prix et la taille du produit (0 pour petit, 1 pour moyen, 2 pour grand):\n");
            scanf("%s %d %d %lf %d", produit.nom, &produit.ref, &produit.quantite, &produit.prix, (int *)&produit.taille);
            ajouterProduit(produit);
        } else if (choix == 2) {
            int ref;
            printf("Entrer la référence du produit:\n");
            scanf("%d", &ref);
            afficherProduit(ref);
        } else if (choix == 3) {
            Client client;
            printf("Entrer le prénom et le nom du client:\n");
            scanf("%s %s", client.prenom, client.nom);
            client.count = 0; // pas d'achats pour l'instant
            ajouterClient(client);
        } else if (choix == 4) {
            char nom[MAX_NAME_LENGTH];
            printf("Entrer le nom du client:\n");
            scanf("%s", nom);
            afficherClient(nom);
        } else if (choix == 5) {
            break;
        } else {
            printf("Choix invalide.\n");
        }
    }
}

void modeAchat() {
    while (1) {
        printf("1. Acheter produit\n");
        printf("2. Quitter\n");

        int choix;
        scanf("%d", &choix);

        if (choix == 1) {
            char nom[MAX_NAME_LENGTH];
            int ref;
            printf("Entrer le nom du client et la référence du produit:\n");
            scanf("%s %d", nom, &ref);
            acheterProduit(nom, ref);
        } else if (choix == 2) {
            break;
        } else {
            printf("Choix invalide.\n");
        }
    }
}

int main() {
    charger();

    while (1) {
        printf("1. Mode gestion\n");
        printf("2. Mode achat\n");
        printf("3. Sauvegarder et quitter\n");

        int choix;
        scanf("%d", &choix);

        if (choix == 1) {
            modeGestion();
        } else if (choix == 2) {
            modeAchat();
        } else if (choix == 3) {
            sauvegarder();
            break;
        } else {
            printf("Choix invalide.\n");
        }
    }

    return 0;
}

